{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/datamuseReducer.js","redux/reducers/queryListReducer.js","redux/reducers/lyricInfoReducer.js","redux/reducers/lyricsReducer.js","redux/reducers/userLyricsReducer.js","redux/reducers/songPartListReducer.js","redux/reducers/websterReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/datamuseAPI.js","redux/sagas/queryList.js","redux/sagas/lyricInfoSaga.js","redux/sagas/lyricsSaga.js","redux/sagas/userLyricsSaga.js","redux/sagas/deleteLyricsSaga.js","redux/sagas/songPartList.js","redux/sagas/deleteLyricCardSaga.js","redux/sagas/updateLyricCardSaga.js","redux/sagas/addLyricCardSaga.js","redux/sagas/addNewSongSaga.js","redux/sagas/updateLyricCardOrderSaga.js","redux/sagas/updateLyricInfoSaga.js","redux/sagas/websterAPI.js","redux/sagas/updateUserInfoSaga.js","redux/sagas/index.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/LogOutButton/LogOutButton.js","components/ProfileButton/ProfileButton.js","components/Header/Header.js","components/AssistantResults/TablePagination.js","components/AssistantResults/TableSorting.js","components/Assistant/Assistant.js","components/AssistantResults/AssistantResults.js","components/CreateLyricCards/CreateLyricCards.js","components/CreateLyrics/CreateLyrics.js","components/Create/Create.js","components/Home/Home.js","components/AccountInformation/AccountInformation.js","components/UserLyricInfo/UserLyricInfo.js","components/UserLyrics/UserLyrics.js","components/UserProfile/UserProfile.js","components/Welcome/Welcome.js","components/App/theme.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","datamuseData","queryList","console","log","lyricInfo","lyrics","userLyrics","songPartList","websterReducer","rootReducer","errors","user","websterData","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","response","status","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","getDatamuse","getDatamuseAPI","concat","datamuseAPI_marked","datamuseAPI_marked2","getQueryList","getQueryListSaga","queryList_marked","queryList_marked2","getLyricInfo","getLyricInfoSaga","songId","lyricInfoSaga_marked","lyricInfoSaga_marked2","getLyrics","getLyricsSaga","lyricId","lyricsSaga_marked","lyricsSaga_marked2","getUserLyrics","getUserLyricsSaga","userLyricsSaga_marked","userLyricsSaga_marked2","deleteLyrics","deleteLyricsSaga","lyricsId","delete","deleteLyricsSaga_marked","deleteLyricsSaga_marked2","getSongPartList","getSongPartListSaga","songPartList_marked","songPartList_marked2","deleteLyricCard","deleteLyricCardSaga","deleteLyricCardSaga_marked","deleteLyricCardSaga_marked2","updateLyricCard","updateLyricCardSaga","song_id","updateLyricCardSaga_marked","updateLyricCardSaga_marked2","addLyricCard","addLyricCardSaga","addLyricCardSaga_marked","addLyricCardSaga_marked2","addNewSong","addNewSongSaga","addNewSongSaga_marked","addNewSongSaga_marked2","updateLyricCardOrder","updateLyricCardOrderSaga","updateLyricCardOrderSaga_marked","updateLyricCardOrderSaga_marked2","updateLyricInfo","updateLyricInfoSaga","updateLyricInfoSaga_marked","updateLyricInfoSaga_marked2","getWebster","getWebsterAPI","websterAPI_marked","websterAPI_marked2","updateUserInfo","updateUserInfoSaga","updateUserInfoSaga_marked","updateUserInfoSaga_marked2","rootSaga","all","sagas_marked","LoginPage","username","password","login","event","preventDefault","_this","props","dispatch","history","push","handleInputChangeFor","propertyName","setState","Object","defineProperty","target","value","_this2","this","classes","react_default","createElement","className","root","Paper_default","paper","Grid_default","container","direction","justify","alignItems","spacing","Typography_default","role","variant","item","xs","onSubmit","index_es","required","label","textField","onChange","margin","Button_default","name","button","color","onClick","Component","connect","withStyles","theme","flexGrow","textAlign","marginLeft","unit","marginRight","maxWidth","padding","marginTop","marginBottom","paddingLeft","paddingRight","RegisterPage","confirmPassword","email","firstName","lastName","description","autoComplete","multiline","rows","fullWidth","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","id","react_router","assign","fontSize","ExitToApp_default","style","withRouter","Person_default","grow","images","width","AppBar_default","position","Toolbar_default","src","alt","first_name","last_name","window","location","hash","components_ProfileButton_ProfileButton","components_LogOutButton_LogOutButton","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","IconButton_default","disabled","aria-label","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","reduxState","flexShrink","palette","text","secondary","withTheme","numeric","disablePadding","EnhancedTableHead","createSortHandler","property","onRequestSort","order","orderBy","TableHead_default","TableRow_default","map","row","TableCell_default","key","align","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","Assistant","queryId","word","anchorEl","help","handleClose","componentDidMount","handleChangeForQuery","searchQuery","updatedQuery","mouseEnter","currentTarget","open","Boolean","noValidate","HelpOutline_default","info","select","SelectProps","MenuProps","menu","option","MenuItem_default","query","Search_default","classNames","leftIcon","iconSmall","Popover_default","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","TableSorting","propTypes","PropTypes","func","isRequired","string","rowCount","number","AssistantResults","handleClickOpen","search","handleRequestSort","handleClick","selected","selectedIndex","indexOf","newSelected","slice","desc","b","stableSort","array","cmp","stabilizedThis","el","index","sort","getSorting","handleChangePage","handleChangeRowsPerPage","Number","prevProps","_this$state","h1","components_Assistant_Assistant","Table_default","table","TableBody_default","hover","tabIndex","score","numSyllables","TableFooter_default","TablePagination_default","rowsPerPageOptions","colSpan","native","onChangeRowsPerPage","ActionsComponent","Dialog_default","def","dialogTitle","dialogContent","shortdef","i","dialogActions","overflowX","fontWeight","letterSpacing","textShadow","borderBottom","divider","textTransform","minWidth","CreateLyricCards","editLyrics","updatedLyrics","lyric_id","task","lyrics_id","song_label_id","label_name","handleDelete","deleteCard","handleEdit","handleSave","finishReorder","handleChangeForLyrics","objectSpread","handleDuplicate","displaySongPart","names","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","react_beautiful_dnd_esm","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","whiteSpace","lg","buttonEdit","Create_default","autoFocus","rowsMax","textFieldMultiline","PlusOne_default","Delete_default","Save_default","borderRadius","float","CreateLyrics","test","droppableId","droppableProps","tasks","components_CreateLyricCards_CreateLyricCards","placeholder","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","Create","openCard","openTitle","author","songPartId","onDragEnd","destination","source","reorderedTasks","lyricArray","searchObject","qs","parse","handleClickOpenCard","handleClickOpenTitle","handleCloseCard","handleCloseTitle","handleAddLyricCard","newCard","handleUpdateLyricInfo","newLyricInfo","saveLyrics","header","inline","Add_default","List_default","print","Print_default","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","DialogActions_default","components_CreateLyrics_CreateLyrics","components_Header_Header","md","components_AssistantResults_AssistantResults","components_Create_Create","AccountInformation","userInfo","sm","UserLyrics","handleClickDelete","handleClickEdit","handlePrint","moment","date_created","format","date_edited","hide","display","newSong","handleOpen","createNewSong","UserLyricInfo","components_AccountInformation_AccountInformation","components_UserLyrics_UserLyrics","Welcome","register","paddingTop","paddingBottom","background","height","createMuiTheme","primary","main","themeName","App","MuiThemeProvider_default","react_router_dom","exact","to","path","components_ProtectedRoute_ProtectedRoute","Home","UserProfile","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a7087c21.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const datamuseData = (state = [], action) => {\n    if (action.type === 'SET_DATAMUSE') {\n        return action.payload;\n    }\n    return state;\n};\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default datamuseData;","const queryList = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_QUERY_LIST':\n        console.log('queryList reducer', action.payload);\n        \n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \nexport default queryList;","const lyricInfo = (state = [], action) => {\n    if (action.type === 'SET_LYRIC_INFO') {\n        return action.payload;\n    }\n    return state;\n};\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default lyricInfo;","const lyrics = (state = {}, action) => {\n    if (action.type === 'SET_LYRICS') {\n        return action.payload;\n    }\n    return state;\n};\n\nexport default lyrics;","const userLyrics = (state = [], action) => {\n    if (action.type === 'SET_USER_LYRICS') {\n        return action.payload;\n    }\n    return state;\n};\n\nexport default userLyrics;","const songPartList = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_SONG_PART_LIST':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \nexport default songPartList;","const websterReducer = (state = [], action) => {\n    if (action.type === 'SET_WEBSTER') {\n        return action.payload;\n    }\n    return state;\n};\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default websterReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport datamuseData from './datamuseReducer';\nimport queryList from './queryListReducer';\nimport lyricInfo from './lyricInfoReducer';\nimport lyrics from './lyricsReducer';\nimport userLyrics from './userLyricsReducer';\nimport songPartList from './songPartListReducer';\nimport websterData from './websterReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user,\n  datamuseData,\n  queryList,\n  lyricInfo,\n  lyrics,\n  userLyrics,\n  songPartList,\n  websterData,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getDatamuse(action) {\n    try {\n        const response = yield axios.get(`/api/datamuse/${action.payload}`);\n        yield put({ type: 'SET_DATAMUSE', payload: response.data })\n    }\n    catch (error) {\n        console.log(`Couldn't get datamuse items`);\n    }\n}\n\nfunction* getDatamuseAPI() {\n    yield takeLatest('GET_DATAMUSE', getDatamuse);\n}\n\nexport default getDatamuseAPI;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getQueryList(action) {\n    try {\n        const response = yield axios.get(`/api/selector/querylist`);\n        yield put({ type: 'SET_QUERY_LIST', payload: response.data })\n    }\n    catch (error) {\n        console.log(`Couldn't get query list`);\n    }\n}\n\nfunction* getQueryListSaga() {\n    yield takeLatest('GET_QUERY_LIST', getQueryList);\n}\n\nexport default getQueryListSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getLyricInfo(action) {\n    const songId = action.payload.songId;\n    console.log('songId getLyricInfoSaga: actionpayload', action.payload);\n    \n    \n    try {\n        const response = yield axios.get(`/api/lyric/info/${songId}`);\n        yield put({ type: 'SET_LYRIC_INFO', payload: response.data })\n    }\n    catch (error) {\n        console.log(`Couldn't get lyric info`);\n    }\n}\n\nfunction* getLyricInfoSaga() {\n    yield takeLatest('GET_LYRIC_INFO', getLyricInfo);\n}\n\nexport default getLyricInfoSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getLyrics(action) {\n    const lyricId = action.payload\n    console.log('lyricId', lyricId);\n    \n    try {\n        const response = yield axios.get(`/api/lyric/${lyricId}`);\n        yield put({ type: 'SET_LYRICS', payload: response.data })\n    }\n    catch (error) {\n        console.log(`Couldn't get lyrics`);\n    }\n}\n\nfunction* getLyricsSaga() {\n    yield takeLatest('GET_LYRICS', getLyrics);\n}\n\nexport default getLyricsSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getUserLyrics() {\n    try {\n        const response = yield axios.get(`/api/user/lyrics/`);\n        yield put({ type: 'SET_USER_LYRICS', payload: response.data })\n    }\n    catch (error) {\n        console.log(`Couldn't get user lyrics`);\n    }\n}\n\nfunction* getUserLyricsSaga() {\n    yield takeLatest('GET_USER_LYRICS', getUserLyrics);\n}\n\nexport default getUserLyricsSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* deleteLyrics(action) {\n    try {\n        \n        let lyricsId = action.payload\n        yield axios.delete(`/api/user/lyrics/delete/${lyricsId}`);\n        yield put({ type: 'GET_USER_LYRICS'})\n    }\n    catch (error) {\n        console.log(`Couldn't delete user lyrics`);\n    }\n}\n\nfunction* deleteLyricsSaga() {\n    yield takeLatest('DELETE_LYRICS', deleteLyrics);\n}\n\nexport default deleteLyricsSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getSongPartList(action) {\n    try {\n        const response = yield axios.get(`/api/selector/songpart`);        \n        yield put({ type: 'SET_SONG_PART_LIST', payload: response.data })\n    }\n    catch (error) {\n        console.log(`Couldn't get query list`);\n    }\n}\n\nfunction* getSongPartListSaga() {\n    yield takeLatest('GET_SONG_PART_LIST', getSongPartList);\n}\n\nexport default getSongPartListSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* deleteLyricCard(action) {\n    try {\n        console.log('action.payload in delete', action.payload);\n\n        let lyricId = action.payload.lyricId;\n        let songId = action.payload.songId;\n        yield axios.delete(`/api/lyric/${lyricId}`);\n        yield put({ type: 'GET_LYRICS', payload: songId});\n    }\n    catch (error) {\n        console.log(`Couldn't delete lyricCard`);\n    }\n}\n\nfunction* deleteLyricCardSaga() {\n    yield takeLatest('DELETE_LYRIC_CARD', deleteLyricCard);\n}\n\nexport default deleteLyricCardSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* updateLyricCard(action) {\n    console.log('update lyric card: ', action.payload);\n    let songId = action.payload.song_id;\n    console.log('update lyric card songId: ', songId);\n\n    try {\n        yield axios.put(`/api/lyric`, action.payload);\n        // yield put({ type: 'GET_LYRICS', payload: action.payload.song_id});\n    }\n    catch (error) {\n        console.log(`Couldn't update lyric card`);\n    }\n}\n\nfunction* updateLyricCardSaga() {\n    yield takeLatest('UPDATE_LYRIC_CARD', updateLyricCard);\n}\n\nexport default updateLyricCardSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* addLyricCard(action) {    \n    try {\n        yield axios.post(`/api/lyric`, action.payload);\n        yield put({ type: 'GET_LYRICS', payload: action.payload.song_id});\n    }\n    catch (error) {\n        console.log(`Couldn't add lyric card`);\n    }\n}\n\nfunction* addLyricCardSaga() {\n    yield takeLatest('ADD_LYRIC_CARD', addLyricCard);\n}\n\nexport default addLyricCardSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* addNewSong(action) {    \n    try {\n        yield axios.post(`/api/lyric/newSong`, action.payload);\n        yield put({ type: 'GET_USER_LYRICS'});\n    }\n    catch (error) {\n        console.log(`Couldn't add lyric card`);\n    }\n}\n\nfunction* addNewSongSaga() {\n    yield takeLatest('ADD_NEW_SONG', addNewSong);\n}\n\nexport default addNewSongSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* updateLyricCardOrder(action) {\n    console.log('update lyric card ORDER: ', action.payload);\n    try {\n        yield axios.put(`/api/lyric/order`, action.payload);\n        // yield put({ type: 'GET_LYRICS', payload: action.payload.song_id});\n\n    }\n    catch (error) {\n        console.log(`Couldn't update lyric card`);\n    } \n}\n\n\nfunction* updateLyricCardOrderSaga() {\n    yield takeLatest('UPDATE_LYRIC_CARD_ORDER', updateLyricCardOrder);\n}\n\nexport default updateLyricCardOrderSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* updateLyricInfo(action) {\n    console.log('update lyric info: ', action.payload);\n\n    try {\n        yield axios.put(`/api/user/lyrics`, action.payload);\n        yield put({ type: 'GET_LYRIC_INFO', payload: action.payload});\n    }\n    catch (error) {\n        console.log(`Couldn't update lyric info`);\n    }\n}\n\nfunction* updateLyricInfoSaga() {\n    yield takeLatest('UPDATE_LYRIC_INFO', updateLyricInfo);\n}\n\nexport default updateLyricInfoSaga;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getWebster(action) {\n    console.log('Get Webster: ', action.payload);\n    \n    try {\n        const response = yield axios.get(`/api/webster/${action.payload}`);\n        yield put({ type: 'SET_WEBSTER', payload: response.data })\n    }\n    catch (error) {\n        console.log(`Couldn't get webster items`);\n    }\n}\n\nfunction* getWebsterAPI() {\n    yield takeLatest('GET_WEBSTER', getWebster);\n}\n\nexport default getWebsterAPI;","import { takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* updateUserInfo(action) {\n    console.log('update user info: ', action.payload);\n\n    try {\n        yield axios.put(`/api/user/`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n    }\n    catch (error) {\n        console.log(`Couldn't update user info`);\n    }\n}\n\nfunction* updateUserInfoSaga() {\n    yield takeLatest('UPDATE_USER_INFO', updateUserInfo);\n}\n\nexport default updateUserInfoSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport getDatamuseAPI from './datamuseAPI';\nimport getQueryList from './queryList';\nimport getLyricInfo from './lyricInfoSaga';\nimport getLyrics from './lyricsSaga';\nimport getUserLyrics from './userLyricsSaga';\nimport deleteLyrics from './deleteLyricsSaga';\nimport getSongPartList from './songPartList';\nimport deleteLyricCard from './deleteLyricCardSaga';\nimport updateLyricCard from './updateLyricCardSaga';\nimport addLyricCard from './addLyricCardSaga';\nimport addNewSong from './addNewSongSaga';\nimport updateLyricCardOrder from './updateLyricCardOrderSaga';\nimport updateLyricInfo from './updateLyricInfoSaga';\nimport getWebsterAPI from './websterAPI';\nimport updateUserInfo from './updateUserInfoSaga';\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    getDatamuseAPI(),\n    getWebsterAPI(),\n    getQueryList(),\n    getSongPartList(),\n    getLyricInfo(),\n    getLyrics(),\n    getUserLyrics(),\n    deleteLyrics(),\n    deleteLyricCard(),\n    updateLyricCard(),\n    updateLyricInfo(),\n    updateUserInfo(),\n    updateLyricCardOrder(),\n    addLyricCard(),\n    addNewSong(),\n  ]);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, TextField } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: \"center\",\n\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  paper: {\n    margin: \"auto\",\n    maxWidth: 700,\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n  },\n  button: {\n    marginTop: 20,\n    marginBottom: 15,\n    paddingLeft: \"5%\",\n    paddingRight: \"5%\",\n  },\n  \n})\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n      this.props.history.push('/userprofile');\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={24}\n          >\n            {this.props.errors.loginMessage && (\n              <Typography\n                className=\"alert\"\n                role=\"alert\"\n                variant=\"h3\"\n              >\n                {this.props.errors.loginMessage}\n              </Typography>\n            )}\n            <Grid item xs={12}>\n            <form onSubmit={this.login}>\n              <Typography variant=\"h1\">Login</Typography>\n              <TextField\n                required\n                label=\"Username\"\n                value={this.state.username}\n                className={classes.textField}\n                onChange={this.handleInputChangeFor('username')}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                type=\"password\"\n                label=\"Password\"\n                value={this.state.password}\n                className={classes.textField}\n                onChange={this.handleInputChangeFor('password')}\n                margin=\"normal\"\n              />\n              <br/>\n              <Button\n                type=\"submit\"\n                name=\"submit\"\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Log In\n            </Button>\n            </form>\n            </Grid>\n            <Grid item xs={12}>\n            <Typography variant=\"h5\">Need An Account?</Typography>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={() => {\n                this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' });\n                this.props.history.push('./register');\n              }}\n            >\n              Register\n            </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nLoginPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(LoginPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, TextField } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: \"center\",\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  paper: {\n    margin: \"auto\",\n    maxWidth: 700,\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n  },\n  button: {\n    marginTop: 30,\n    marginBottom: 15,\n    paddingLeft: \"5%\",\n    paddingRight: \"5%\",\n  },\n})\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    description: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password && this.state.password === this.state.confirmPassword) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          description: this.state.description,\n        },\n      });\n      this.props.history.push('/home');\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={24}\n          >\n              {this.props.errors.registrationMessage && (\n                <Typography\n                  variant=\"h2\"\n                  className=\"alert\"\n                  role=\"alert\"\n                >\n                  {this.props.errors.registrationMessage}\n                </Typography>\n              )}\n            <Grid item xs={12}>\n              <form className={classes.container}  autoComplete=\"off\" onSubmit={this.registerUser}>\n                <Typography variant=\"h2\">Register User</Typography>\n                  <TextField\n                    required\n                    label=\"Username\"\n                    value={this.state.username}\n                    className={classes.textField}\n                    onChange={this.handleInputChangeFor('username')}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    type=\"password\"\n                    label=\"Password\"\n                    value={this.state.password}\n                    className={classes.textField}\n                    onChange={this.handleInputChangeFor('password')}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    type=\"password\"\n                    label=\"Confrim Password\"\n                    className={classes.textField}\n                    value={this.state.confirmPassword}\n                    onChange={this.handleInputChangeFor('confirmPassword')}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    label=\"Email Address\"\n                    type=\"email\"\n                    className={classes.textField}\n                    value={this.state.email}\n                    onChange={this.handleInputChangeFor('email')}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    label=\"First Name\"\n                    type=\"text\"\n                    className={classes.textField}\n                    value={this.state.firstName}\n                    onChange={this.handleInputChangeFor('firstName')}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    label=\"Last Name\"\n                    type=\"text\"\n                    className={classes.textField}\n                    value={this.state.lastName}\n                    onChange={this.handleInputChangeFor('lastName')}\n                    margin=\"normal\"\n                  />\n                <TextField\n                  label=\"Description\"\n                  multiline\n                  rows=\"5\"\n                  value={this.state.description}\n                  onChange={this.handleInputChangeFor('description')}\n                  className={classes.textField}\n                  margin=\"normal\"\n                  fullWidth\n                />\n                <Button\n                  type=\"submit\"\n                  name=\"submit\"\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Register\n              </Button>\n              </form>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h2\" >Already Registered?</Typography>\n                <Button\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  onClick={() => {\n                    this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' });\n                    this.props.history.push('/login');\n                  }}\n                >\n                  Login\n              </Button>\n              </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nRegisterPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(RegisterPage));\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport ExitIcon from '@material-ui/icons/ExitToApp';\n\nconst button = {\n  marginRight: 5,\n  fontSize: 20,\n}\n\nconst LogOutButton = props => (\n  <Button\n    className={props.className}\n    color=\"secondary\"\n    variant=\"contained\"\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    <ExitIcon style={button}/>\n    Log Out\n  </Button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst button = {\n  marginRight: 5,\n  fontSize: 20,\n}\n\nconst ProfileButton = props => (\n  <Button\n    className={props.className}\n    color=\"secondary\"\n    variant=\"contained\"\n    onClick={() => props.history.push('/userprofile')}\n  >\n    <PersonIcon style={button}/>\n    Profile\n  </Button>\n);\n\nexport default withRouter(connect()(ProfileButton));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport ProfileButton from '../ProfileButton/ProfileButton';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n        marginLeft: 30,\n    },\n    images: {\n        width: 100,\n        margin: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    }\n});\n\nconst Header = (props) => {\n    const { classes } = props;\n    console.log('Props header: ', props);\n    \n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <img className={classes.images} src=\"/images/LyrAssist_logo.svg\" alt=\"lyrAssist Logo\" />\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        Welcome, {props.user.first_name} {props.user.last_name}!\n                    </Typography>\n                    {window.location.hash !== '#/userprofile' ?\n                    <ProfileButton className={classes.button}/>\n                    : <span></span>}\n                    <LogOutButton className={classes.button}/>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    user: state.user,\n});\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Header));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n\nconst actionsStyles = theme => ({\n    root: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: theme.spacing.unit * 2.5,\n    },\n  });\n  \n  class TablePaginationActions extends Component {\n    handleFirstPageButtonClick = event => {\n      this.props.onChangePage(event, 0);\n    };\n  \n    handleBackButtonClick = event => {\n      this.props.onChangePage(event, this.props.page - 1);\n    };\n  \n    handleNextButtonClick = event => {\n      this.props.onChangePage(event, this.props.page + 1);\n    };\n  \n    handleLastPageButtonClick = event => {\n      this.props.onChangePage(\n        event,\n        Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n      );\n    };\n  \n    render() {\n      const { classes, count, page, rowsPerPage, theme } = this.props;\n  \n      return (\n        <div className={classes.root}>\n          <IconButton\n            onClick={this.handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"First Page\"\n          >\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n          <IconButton\n            onClick={this.handleBackButtonClick}\n            disabled={page === 0}\n            aria-label=\"Previous Page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          </IconButton>\n          <IconButton\n            onClick={this.handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"Next Page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </IconButton>\n          <IconButton\n            onClick={this.handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"Last Page\"\n          >\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n        </div>\n      );\n    }\n  };\n\n  const mapStateToProps = reduxState => ({\n    reduxState\n  });\n  \n  TablePaginationActions.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default connect(mapStateToProps)(withStyles(actionsStyles, { withTheme: true })(TablePaginationActions));\n  ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst rows = [\n    { id: 'word', numeric: false, disablePadding: true, label: 'Word/Phrase' },\n    { id: 'score', numeric: true, disablePadding: false, label: 'Ranking' },\n    { id: 'numSyllables', numeric: true, disablePadding: false, label: 'Syllables' },\n];\n\nclass EnhancedTableHead extends Component {\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(\n                        row => (\n                            <TableCell\n                                key={row.id}\n                                align={row.numeric ? 'right' : 'left'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                <Tooltip\n                                    title=\"Sort\"\n                                    placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                    enterDelay={300}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy === row.id}\n                                        direction={order}\n                                        onClick={this.createSortHandler(row.id)}\n                                    >\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            </TableCell>\n                        ),\n                        this,\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nexport default connect()(EnhancedTableHead);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles, TextField } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HelpIcon from '@material-ui/icons/HelpOutline';\nimport Popover from '@material-ui/core/Popover';\n\nconst styles = theme => ({\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    menu: {\n        width: 200,\n    },\n    paper: {\n        margin: \"auto\",\n        // maxWidth: 700,\n        padding: theme.spacing.unit * 2,\n        textAlign: \"center\",\n    },\n    root: {\n        marginTop: 8.6,\n        flexGrow: 1,\n        textAlign: \"center\",\n        marginBottom: 15,\n    },\n    button: {\n        marginTop: 20,\n        marginBottom: 15,\n        paddingLeft: \"5%\",\n        paddingRight: \"5%\",\n      },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n    info: {\n        marginTop: 32,\n        marginRight: 15,\n    },\n    typography: {\n        margin: theme.spacing.unit * 2,\n    },\n})\n\nclass Assistant extends Component {\n    state = {\n        queryId: 1,\n        word: '',\n        anchorEl: null,\n        help: '',\n    };\n\n    handleClose = () => {\n    this.setState({\n        anchorEl: null,\n    });\n    };\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_QUERY_LIST' });\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n            [propertyName]: event.target.value,\n        });\n    }\n\n    handleChangeForQuery = (event) => {\n        this.setState({\n            word: event.target.value\n        })\n    }\n\n    searchQuery = (event) => {\n        event.preventDefault();\n        let updatedQuery = '';\n        if (this.state.word === '') {\n            return\n        }\n        else if (this.state.queryId === 1) {\n            updatedQuery = `rel_rhy=${this.state.word}`;\n        }\n        else if (this.state.queryId === 2) {\n            updatedQuery = `rel_ant=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 3) {\n            updatedQuery = `ml=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 4) {\n            updatedQuery = `rel_nry=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 5) {\n            updatedQuery = `rel_hom=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 6) {\n            updatedQuery = `rel_syn=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 7) {\n            updatedQuery = `rel_jjb=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 8) {\n            updatedQuery = `rel_par=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 9) {\n            updatedQuery = `rel_bga=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 10) {\n            updatedQuery = `rel_bgb=${this.state.word}&md=s`;\n        }\n        else if (this.state.queryId === 11) {\n            updatedQuery = `rel_jja=${this.state.word}&md=s`;\n        }\n        \n        this.props.dispatch({ type: 'GET_DATAMUSE', payload: updatedQuery })\n    }\n\n    mouseEnter = (event) => {\n        console.log('click!!!!!');\n        event.preventDefault();\n  \n        if (this.state.queryId === 1) {\n            this.setState({\n                help: 'Use \"Rhymes (Perfect)\" to search for words that perfectly rhyme with one another (e.g. prime and time).',\n            });\n        }\n        else if (this.state.queryId === 2) {\n            this.setState({\n                help: 'Use \"Antonyms\" to search for words opposite in meaning (e.g. bad and good ).',\n            });\n        }\n        else if (this.state.queryId === 3) {\n            this.setState({\n                help: 'Use \"Meaning Similar To...\" to find words that have similar meaning (e.g. crime and law-breaking ).',\n            });\n        }\n        else if (this.state.queryId === 4) {\n            this.setState({\n                help: 'Use \"Rhymes (Approximate)\" to search for words that closely rhyme with one another (e.g. mind and primed ).',\n            });\n        }\n        else if (this.state.queryId === 5) {\n            this.setState({\n                help: 'Use \"Homophones\" to find for words that sound alike (e.g. course and coarse ).',\n            });\n        }\n        else if (this.state.queryId === 6) {\n            this.setState({\n                help: 'Use \"Synonyms\" to search for words that means exactly or nearly the same as one another (e.g. ocean and sea ).',\n            });\n        }\n        else if (this.state.queryId === 7) {\n            this.setState({\n                help: 'Use \"Words to Describe...\" to find adjectives that are often used to a given noun (e.g. beach and sandy ).',\n            });\n        }\n        else if (this.state.queryId === 8) {\n            this.setState({\n                help: 'rhyme',\n            });\n        }\n        else if (this.state.queryId === 9) {\n            this.setState({\n                help: 'Use \"Frequent Followers\" to search for words that often follow one another (e.g. havoc follows wreak).',\n            });\n        }\n        else if (this.state.queryId === 10) {\n            this.setState({\n                help: 'Use \"Frequent Predecessors\" to search for words that often proceed one another (e.g. wreak proceeds havoc ).',\n            });            \n        }\n        else if (this.state.queryId === 11) {\n            this.setState({\n                help: 'Use \"Described By...\" to find nouns that are often modified by the given adjective (e.g. gradual and increase ).',\n            });            \n        }\n\n        this.setState({\n            anchorEl: event.currentTarget,\n        })\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={24}\n                    >\n                    <Grid item xs={12}>\n\n                        <form onSubmit={this.searchQuery} noValidate autoComplete=\"off\">\n                            <HelpIcon onClick={this.mouseEnter} className={classes.info}/>\n                            <TextField\n                                select\n                                label=\"What To Search\"\n                                className={classes.textField}\n                                value={this.state.queryId}\n                                onChange={this.handleInputChangeFor('queryId')}\n                                SelectProps={{\n                                    MenuProps: {\n                                        className: classes.menu,\n                                    },\n                                }}\n                                margin=\"normal\"\n                            >\n                                {this.props.reduxState.queryList.map(option => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.query}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                            <TextField\n                                label=\"Word or Phrase\"\n                                className={classes.textField}\n                                value={this.state.word}\n                                onChange={this.handleChangeForQuery}\n                                margin=\"normal\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                name=\"submit\"\n                                variant=\"contained\"\n                                className={classes.button}\n                                color=\"primary\"\n                            >\n                                <SearchIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                Search\n                            </Button>\n                        </form>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Popover\n                    id=\"simple-popper\"\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    >\n                    <Typography className={classes.typography}>{this.state.help}</Typography>\n                </Popover>\n            </div>\n                );\n            }\n        }\n        \nconst mapStateToProps = reduxState => ({\n                    reduxState\n                });\n                \nAssistant.propTypes = {\n                    classes: PropTypes.object.isRequired,\n            };\n            \nexport default connect(mapStateToProps)(withStyles(styles)(Assistant));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TablePaginationActions from './TablePagination';\nimport TableSorting from './TableSorting';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Assistant from '../Assistant/Assistant';\n\n\nTableSorting.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n    marginTop: theme.spacing.unit,\n  },\n  h1: {\n    marginTop: theme.spacing.unit,\n    fontWeight: \"bold\",\n    letterSpacing: 5,\n    textShadow: '1px 1px 0 #FFF'\n  },\n  typography: {\n    padding: theme.spacing.unit * 2,\n  },\n  button: {\n    // width: 200,\n    margin: theme.spacing.unit,\n  }, \n  dialogTitle: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    textTransform: 'capitalize',\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n  },\n  dialogContent: {\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n  },\n  dialogActions: {\n    marginLeft: \"auto\",\n    padding: theme.spacing.unit * 2,\n  },\n  def: {\n    minWidth: 300,\n  }\n});\n\nclass AssistantResults extends Component {\n\n  state = {\n    order: 'asc',\n    orderBy: 'ranking',\n    data: [],\n    page: 0,\n    rowsPerPage: 8,\n    open: false,\n    word: '',\n  }\n\n  componentDidMount = () => {\n    this.props.dispatch({ type: 'GET_DATAMUSE' })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.reduxState.datamuseData !== prevProps.reduxState.datamuseData) {\n      this.setState({\n        data: this.props.reduxState.datamuseData,\n      })\n    }\n  }\n\n  handleClickOpen = (search) => {\n    this.setState({\n      word: search,\n      open: true,\n    });\n    this.props.dispatch({type: 'GET_WEBSTER', payload: search});\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  desc = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  stableSort = (array, cmp) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = cmp(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  getSorting = (order, orderBy) => {\n    return order === 'desc' ? (a, b) => this.desc(a, b, orderBy) : (a, b) => -this.desc(a, b, orderBy);\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ page: 0, rowsPerPage: Number(event.target.value) });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, rowsPerPage, page } = this.state;\n\n\n    return (\n      <div className=\"scroll\">\n        <Typography variant=\"h2\" align=\"center\" className={classes.h1} color=\"primary\">Assistant</Typography>\n        <Paper className={classes.paper} >\n            <Assistant />         \n        </Paper>\n        <Paper className={classes.root}>\n          <Table className={classes.table}>\n            <TableSorting\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length} />\n            <TableBody>\n              {this.stableSort(data, this.getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((data, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell >\n                          <Button variant=\"outlined\" color=\"secondary\" onClick={()=> this.handleClickOpen(data.word)} className={classes.button}>\n                              {data.word}\n                          </Button>\n                      </TableCell>\n                      <TableCell align=\"right\">{data.score}</TableCell>\n                      <TableCell align=\"right\">{data.numSyllables}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[10, 15, 20, 25, 30]}\n                  colSpan={3}\n                  count={data.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </Paper>\n\n      \n        <Dialog\n          onClose={this.handleClose}\n          open={this.state.open}\n        >\n          <div className={classes.def}>\n            <div className={classes.dialogTitle}>\n              <Typography variant=\"h4\">{this.state.word}</Typography>\n            </div>\n            <div className={classes.dialogContent}>\n              <Typography variant=\"h6\">Definition: </Typography>\n              <ul>\n              {this.props.reduxState.websterData.slice(0, 1).map((data) => {\n                return data.shortdef.map((data, i) => {\n                  return <li key={i} className={classes.def}><Typography variant=\"body1\">{data}</Typography></li>\n                })\n              })}\n              </ul>\n            </div>\n            <div className={classes.dialogActions}>\n              <Button onClick={this.handleClose} variant=\"contained\" color=\"primary\">\n                Close\n              </Button>\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState\n});\n\nAssistantResults.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(AssistantResults));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles, TextField } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Draggable } from 'react-beautiful-dnd';\nimport EditIcon from '@material-ui/icons/Create';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PlusIcon from '@material-ui/icons/PlusOne';\n\nconst styles = theme => ({\n    textField: {\n        width: 200,\n        marginRight: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit * 1.5,\n        marginTop: 10,\n    },\n    menu: {\n        width: 200,\n    },\n    container: {\n        borderRadius: \"10px\",\n        flexGrow: 1,\n        padding: 1,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n    buttonEdit: {\n        float: \"left\"\n    }\n});\n\nclass CreateLyricCards extends Component {\n\n    state = {\n        editLyrics: false,\n        updatedLyrics: {\n            lyric_id: this.props.task.lyrics_id,\n            song_label_id: this.props.task.song_label_id,\n            label_name: this.props.task.label_name,\n            lyrics: this.props.task.lyrics,\n            song_id: this.props.task.song_id,\n            index: this.props.task.index,\n        }\n    }\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_SONG_PART_LIST' });\n    };\n\n    handleDelete = () => {\n        this.setState({\n            editLyrics: false,\n        });\n\n        const deleteCard = {\n            songId: this.state.updatedLyrics.song_id,\n            lyricId: this.state.updatedLyrics.lyric_id,\n        }\n        this.props.dispatch({ type: 'DELETE_LYRIC_CARD', payload: deleteCard })\n    }\n\n    handleEdit = () => {       \n        this.setState({\n            editLyrics: true,\n        })\n    }\n\n    handleSave = (event) => {\n        event.preventDefault();\n        this.props.finishReorder();\n        this.setState({\n            editLyrics: false,\n        });\n        this.props.dispatch({ type: 'UPDATE_LYRIC_CARD', payload: this.state.updatedLyrics });\n    }\n\n    handleChangeForLyrics = propertyName => (event) => {\n        this.setState({\n            updatedLyrics: {\n                ...this.state.updatedLyrics,\n                [propertyName]: event.target.value\n            }\n        })\n    }\n\n    handleDuplicate = () => {\n        this.props.dispatch({ type: 'ADD_LYRIC_CARD', payload: this.state.updatedLyrics });\n    }\n\n\n    displaySongPart = () => {\n        let names = this.props.reduxState.songPartList;\n     \n        for (const name of names) {  \n            if (name.id === this.state.updatedLyrics.song_label_id) {\n                return name.label_name;\n            }\n        }\n        \n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Draggable draggableId={this.props.task.lyrics_id} index={this.props.index}>\n                {provided => (\n                    <div\n                        className={classes.container}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                    >\n                       {this.state.editLyrics === false ? \n                        \n                        <Paper className={classes.paper}>\n                        <Grid container spacing={16}>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h6\">\n                                    {this.displaySongPart()} \n                                </Typography>\n                                <Typography style={{whiteSpace: 'pre-line'}} variant=\"body1\">{this.state.updatedLyrics.lyrics}</Typography>\n                            </Grid>\n                            <Grid item lg={2}>\n                                <div className=\"section-to-hide\">\n                                    <Button \n                                        variant=\"contained\" \n                                        color=\"primary\" \n                                        className={classes.buttonEdit} \n                                        onClick={this.handleEdit}\n                                    >\n                                        <EditIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                        Edit\n                                    </Button>\n                                </div>\n                            </Grid>\n                        </Grid>\n                        </Paper>\n                        \n                        :\n                        <Paper className={classes.paper}>\n                            <form noValidate autoComplete=\"off\">\n                                <TextField\n                                    select\n                                    autoFocus\n                                    margin=\"dense\"\n                                    label=\"Change Song Part\"\n                                    className={classes.textField}\n                                    value={this.state.updatedLyrics.song_label_id}\n                                    onChange={this.handleChangeForLyrics('song_label_id')}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            className: classes.menu,\n                                        },\n                                    }}\n                                >\n                                    {this.props.reduxState.songPartList.map(option => (\n                                        <MenuItem key={option.id} value={option.id}>\n                                            {option.label_name}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                <TextField\n                                    label=\"Edit Lyrics\"\n                                    multiline\n                                    fullWidth\n                                    rowsMax=\"50\"\n                                    className={classes.textFieldMultiline}\n                                    value={this.state.updatedLyrics.lyrics}\n                                    onChange={this.handleChangeForLyrics('lyrics')}\n                                    margin=\"normal\"\n                                >\n                                </TextField>\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"primary\" \n                                    className={classes.button} \n                                    onClick={this.handleDuplicate}\n                                >\n                                    <PlusIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                    Duplicate\n                                </Button>\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"primary\" \n                                    className={classes.button} \n                                    onClick={this.handleDelete}\n                                >\n                                    <DeleteIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                    Delete\n                                </Button>\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"primary\" \n                                    className={classes.button} \n                                    onClick={this.handleSave}\n                                >\n                                    <SaveIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                    Save\n                                </Button>                            \n                            </form>\n                        </Paper>\n                    }\n                    </div>\n                )}\n            </Draggable>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState\n});\n\nCreateLyricCards.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(CreateLyricCards))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { Droppable } from 'react-beautiful-dnd';\nimport CreateLyricCards from '../CreateLyricCards/CreateLyricCards';\n\n\n\nconst styles = theme => ({\n    task: {\n        padding: 2,\n    },\n})\n\nclass CreateLyrics extends Component {\n\n\n    render() {\n        const { classes } = this.props;\n        \n        return (\n                <div className={classes.test}>\n                {/* {JSON.stringify(this.props.tasks)} */}\n                    <Droppable droppableId=\"this-id\">\n                        {provided => (\n                            <div\n                                className={classes.task}\n                                ref={provided.innerRef}\n                                {...provided.droppableProps}\n                            >\n                                {this.props.tasks.map((task, index) => \n                                    <CreateLyricCards \n                                        key={task.lyrics_id} \n                                        task={task} \n                                        index={index} \n                                        songId={this.props.songId} \n                                        finishReorder={this.props.finishReorder}/>\n                                )}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState\n});\n\nCreateLyrics.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(CreateLyrics));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport qs from 'query-string';\nimport { withRouter } from \"react-router\";\nimport { withStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport CreateLyrics from '../CreateLyrics/CreateLyrics';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport EditIcon from '@material-ui/icons/Create';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List'\n\nconst reorder = (list, startIndex, endIndex) => {\n    console.log('startIndex: ', startIndex);\n    console.log('endIndex: ', endIndex);\n\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst styles = theme => ({\n    root: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    menu: {\n        width: 200,\n    },\n    paper: {\n        margin: \"auto\",\n        maxWidth: 700,\n        padding: theme.spacing.unit * 2,\n        textAlign: \"center\",\n    },\n    button: {\n        // width: 200,\n        margin: theme.spacing.unit,\n    },\n    header: {\n        marginTop: theme.spacing.unit,\n    },\n    h1: {\n        marginTop: theme.spacing.unit,\n        fontWeight: \"bold\",\n        letterSpacing: 5,\n        textShadow: '1px 1px 0 #FFF'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});\n\nclass Create extends Component {\n\n    state = {\n        openCard: false,\n        openTitle: false,\n        title: '',\n        author: '',\n        songPartId: 1,\n        songId: 0,\n        lyrics: [],\n    }\n\n    onDragEnd = (result) => {\n        // reorder results\n\n        if (!result.destination) {\n            return;\n        }\n        if (\n            result.destination.draggableId === result.source.droppableId &&\n            result.destination.index === result.source.index\n        ) {\n            return;\n        }\n\n        const reorderedTasks = reorder(\n            this.state.lyrics, // starting array data\n            result.source.index,         // starting array index\n            result.destination.index     // ending array index\n        );\n\n        // update our state\n        this.setState({\n            lyrics: reorderedTasks,\n        });\n        // this.finishReorder();\n    }\n\n    finishReorder = () => {\n        // console.log('Initial index order: ', this.state.lyrics);\n        let index = 1;\n        index = 1;\n        const lyricArray = this.state.lyrics\n        for (let i = 0; i < lyricArray.length; i++) {\n            console.log('LyricArray initial', lyricArray[i]);\n            lyricArray[i] = {\n                ...lyricArray[i],\n                index: index\n            };\n            index = index + 1;\n            this.props.dispatch({ type: 'UPDATE_LYRIC_CARD_ORDER', payload: lyricArray[i] });\n            console.log('LyricArray updated', lyricArray[i]);\n        }\n        // console.log('finish reOrder state: ', lyricArray);\n        // sort(lyricArray).asc(u => u.index)\n        // this.setState({\n        //     lyrics: lyricArray,\n        // })\n        this.props.dispatch({ type: 'GET_LYRICS', payload: this.state.songId});\n        // this function could dispatch to a saga for your PUT/update\n        // prove our order is correct in state\n        // console.log('Updated index order: ', this.state.lyrics);\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        // console.log('prevProps', prevProps);\n\n        if (this.props.reduxState.lyrics !== prevProps.reduxState.lyrics) {\n            this.setState({\n                lyrics: this.props.reduxState.lyrics\n            })\n        };\n        if (this.props.reduxState.lyricInfo !== prevProps.reduxState.lyricInfo) {\n            this.setState({\n                title: this.props.reduxState.lyricInfo.title,\n                author: this.props.reduxState.lyricInfo.author,\n            })\n        };\n    }\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_SONG_PART_LIST' });\n\n\n        const searchObject = qs.parse(this.props.location.search);\n        // console.log('search Object', searchObject.songId);\n        this.setState({\n            songId: searchObject.songId,\n        })\n\n        this.props.dispatch({ type: 'GET_LYRICS', payload: searchObject.songId });\n        this.props.dispatch({ type: 'GET_LYRIC_INFO', payload: { songId: searchObject.songId } });\n\n    };\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n            [propertyName]: event.target.value,\n        });\n    }\n\n    handleClickOpenCard = () => {\n        this.setState({ openCard: true });\n    };\n\n    handleClickOpenTitle = () => {\n        this.setState({ openTitle: true });\n    };\n\n    handleCloseCard = () => {\n        this.setState({ openCard: false });\n    }\n\n    handleCloseTitle = () => {\n        this.setState({ openTitle: false });\n    }\n\n    handleAddLyricCard = (event) => {\n        event.preventDefault();\n        this.setState({\n            openCard: false\n        });\n        const newCard = {\n            song_label_id: this.state.songPartId,\n            song_id: this.state.songId,\n            lyrics: \"Add lyrics...\"\n        }\n        this.props.dispatch({ type: 'ADD_LYRIC_CARD', payload: newCard });\n    };\n\n    handleUpdateLyricInfo = (event) => {\n        event.preventDefault();       \n        this.setState({\n            openTitle: false\n        });\n        const newLyricInfo = {\n            title: this.state.title,\n            author: this.state.author,\n            songId: this.state.songId,\n        }\n        // console.log('newLyricInfo', newLyricInfo);\n        this.props.dispatch({ type: 'UPDATE_LYRIC_INFO', payload: newLyricInfo });\n    }\n\n    saveLyrics = (event) => {\n        this.handleUpdateLyricInfo(event);\n        this.finishReorder();\n        this.props.history.push('/userprofile')\n\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className=\"scroll\" id=\"section-to-print\">\n                {/* {JSON.stringify(this.state.lyrics)} */}\n                <Grid item xs={12} >\n                    <div className=\"section-to-hide\">\n                        <Typography variant=\"h2\" align=\"center\" color=\"primary\" className={classes.h1}>Lyrics</Typography>\n                    </div>\n                    <div className={classes.header}>\n                        <Paper className={classes.paper} >\n                            <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"center\">\n\n                                <Grid container direction=\"column\">\n                                    <Grid item >\n                                        <Grid item>\n                                            <Typography inline={true} variant=\"h6\" color=\"primary\">Title: </Typography>\n                                            <Typography inline={true} variant=\"h6\">{this.props.reduxState.lyricInfo.title}</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography inline={true} variant=\"h6\" color=\"primary\">Author: </Typography>\n                                            <Typography inline={true} variant=\"h6\">{this.props.reduxState.lyricInfo.author}</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container direction=\"column\">\n                                    <Grid item >\n                                        <Grid>\n                                        {/* <div className=\"section-to-hide\"> */}\n\n                                            <Button \n                                                className={classes.button} \n                                                variant=\"contained\" \n                                                onClick={this.handleClickOpenCard} \n                                                color=\"primary\"\n                                            >\n                                                <AddIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                                Add Lyric Card\n                                            </Button>\n                                            <Button \n                                                className={classes.button} \n                                                variant=\"contained\" \n                                                onClick={this.finishReorder} \n                                                color=\"primary\"\n                                            >\n                                                <ListIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                                Save Card Order\n                                            </Button>\n                                            <Button \n                                                className={classes.button} \n                                                variant=\"contained\" \n                                                onClick={this.handleClickOpenTitle} \n                                                color=\"primary\"\n                                            >\n                                                <EditIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                                Edit Title / Author\n                                            </Button>\n                                            <Button \n                                                className={classes.button} \n                                                variant=\"contained\" \n                                                onClick={() => window.print()} \n                                                color=\"primary\"\n                                            >\n                                                <PrintIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                                Print\n                                            </Button>\n                                            <Button \n                                                className={classes.button} \n                                                variant=\"contained\" \n                                                onClick={this.saveLyrics} \n                                                color=\"primary\"\n                                            >\n                                                <SaveIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                                                Save & Exit\n                                            </Button>\n                                        {/* </div> */}\n\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </div>\n                </Grid>\n                {/* {JSON.stringify(this.props.lyricInfo)} */}\n                {/* {JSON.stringify(this.state.title)} */}\n\n                <Dialog\n                    open={this.state.openCard}\n                    onClose={this.handleCloseCard}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Add Lyric Card</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Select A Song Part You Want To Add\n                            </DialogContentText>\n                        <TextField\n                            select\n                            fullWidth\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Song Part\"\n                            className={classes.textField}\n                            value={this.state.songPartId}\n                            onChange={this.handleInputChangeFor('songPartId')}\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu,\n                                },\n                            }}\n                        >\n                            {this.props.reduxState.songPartList.map(option => (\n                                <MenuItem key={option.id} value={option.id}>\n                                    {option.label_name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseCard} color=\"primary\">\n                            Close\n                        </Button>\n                        <Button onClick={this.handleAddLyricCard} color=\"primary\">\n                            Add\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.openTitle}\n                    onClose={this.handleCloseTitle}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Edit Lyric Info</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            label=\"Edit Title\"\n                            fullWidth\n                            className={classes.textFieldMultiline}\n                            value={this.state.title}\n                            onChange={this.handleInputChangeFor('title')}\n                            margin=\"normal\"\n                        >\n                        </TextField>\n                        <TextField\n                            label=\"Edit Author\"\n                            fullWidth\n                            className={classes.textFieldMultiline}\n                            value={this.state.author}\n                            onChange={this.handleInputChangeFor('author')}\n                            margin=\"normal\"\n                        >\n                        </TextField>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseTitle} color=\"primary\">\n                            Close\n                        </Button>\n                        <Button onClick={this.handleUpdateLyricInfo} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <br />\n                <div className={classes.test}>\n                <Grid item xs={12} >\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        {/* tasks must be the current tasks from state, not initialData */}\n                        <CreateLyrics tasks={this.state.lyrics} songId={this.state.songId} finishReorder={this.finishReorder}/>\n                    </DragDropContext>\n                </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState\n});\n\nCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(Create)));","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../Header/Header';\nimport AssistantResults from '../AssistantResults/AssistantResults';\nimport Create from '../Create/Create';\nimport Grid from '@material-ui/core/Grid';\n\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nconst Home = (props) => (\n  <div>\n    <Header/>\n    <Grid \n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      spacing={24}\n    >\n      <Grid item md={6}>\n        <AssistantResults />\n      </Grid>\n      <Grid item md={6}>\n        <Create />\n      </Grid>\n    </Grid>\n  </div>\n);\n\nexport default connect()(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, TextField } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Create';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 20,\n\n    },\n    paper: {\n        margin: \"auto\",\n        // maxWidth: 700,\n        padding: theme.spacing.unit * 3,\n        // textAlign: \"left\",\n    },\n    button: {\n        // width: 200,\n        marginTop: 20,\n        margin: theme.spacing.unit,\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n        fontSize: 20,\n    },\n});\n\nclass AccountInformation extends Component {\n\n    state = {\n        open: false,\n        userInfo: {\n            first_name: this.props.user.first_name,\n            last_name: this.props.user.last_name,\n            username: this.props.user.username,\n            email: this.props.user.email,\n            description: this.props.user.description,\n        }\n    }\n\n    \n\n    handleEdit = () => {\n        console.log('state', this.state);\n\n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    handleSave = () => {\n        this.setState({\n            open: !this.state.open\n        })\n\n        this.props.dispatch({type: 'UPDATE_USER_INFO', payload: this.state.userInfo})\n    }\n\n    handleChangeForLyrics = propertyName => (event) => {\n        this.setState({\n            userInfo: {\n                ...this.state.userInfo,\n                [propertyName]: event.target.value\n            }\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n                    {this.state.open === false ?\n                            <Grid container spacing={16}>\n                                <Grid item xs={12}>\n                                    <Typography align=\"center\" variant=\"h3\">Account Information</Typography>\n                                </Grid>\n                                <Grid item xs={6} >\n                                    <Typography variant=\"h6\">Your Story:</Typography>\n                                    <Typography style={{whiteSpace: 'pre-line'}} variant=\"body1\">{this.props.user.description}</Typography>\n                                </Grid>\n                                <Grid item sm xs={6} container>\n                                    <Grid item xs container direction=\"column\" spacing={16}>\n                                        <Typography variant=\"h6\">First Name:</Typography>\n                                        <Typography variant=\"body1\">{this.props.user.first_name}</Typography>\n                                        <Typography variant=\"h6\">Last Name:</Typography>\n                                        <Typography variant=\"body1\">{this.props.user.last_name}</Typography>\n                                        <Typography variant=\"h6\">User Name:</Typography>\n                                        <Typography variant=\"body1\">{this.props.user.username}</Typography>\n                                        <Typography variant=\"h6\">Email:</Typography>\n                                        <Typography variant=\"body1\">{this.props.user.email}</Typography>\n                                        <Button\n                                            variant=\"contained\"\n                                            onClick={this.handleEdit}\n                                            className={classes.button}\n                                            color=\"primary\"\n                                        >\n                                            <EditIcon className={classes.leftIcon} />\n                                            Edit\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        :\n                            <Grid container spacing={16}>\n\n                                <Grid item xs={12}>\n                                    <Typography align=\"center\" variant=\"h3\">Account Information</Typography>\n                                </Grid>\n                                <Grid item xs={6} >\n                                    <Typography variant=\"h6\">Your Story:</Typography>\n                                    <TextField\n                                    multiline\n                                    fullWidth\n                                    rowsMax=\"50\"\n                                    className={classes.textField}\n                                    value={this.state.userInfo.description}\n                                    onChange={this.handleChangeForLyrics('description')}\n                                    >\n                                    </TextField>\n                                </Grid>\n                                <Grid item sm xs={6} container>\n                                    <Grid item xs container direction=\"column\" spacing={16}>\n                                        <Typography variant=\"h6\">First Name:</Typography>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={this.state.userInfo.first_name}\n                                            onChange={this.handleChangeForLyrics('first_name')}\n                                        >\n                                        </TextField>\n                                        <Typography variant=\"h6\">Last Name:</Typography>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={this.state.userInfo.last_name}\n                                            onChange={this.handleChangeForLyrics('last_name')}\n                                        >\n                                        </TextField>\n                                        <Typography variant=\"h6\">User Name:</Typography>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={this.state.userInfo.username}\n                                            onChange={this.handleChangeForLyrics('username')}\n                                        >\n                                        </TextField>\n                                        <Typography variant=\"h6\">Email:</Typography>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={this.state.userInfo.email}\n                                            onChange={this.handleChangeForLyrics('email')}\n                                        >\n                                        </TextField>\n                                        <Button\n                                            variant=\"contained\"\n                                            onClick={this.handleSave}\n                                            className={classes.button}\n                                            color=\"primary\"\n                                        >\n                                            <SaveIcon className={classes.leftIcon} />\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                    }\n                </Paper>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n});\n\nAccountInformation.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(AccountInformation));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    hide: {\n        display: \"none\",\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n})\n\nclass UserLyrics extends Component {\n\n    handleClickDelete = (event) => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'DELETE_LYRICS', payload: this.props.info.id })\n    }\n\n    handleClickEdit = (event) => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'GET_LYRICS', payload: this.props.info.id });\n        this.props.dispatch({ type: 'GET_LYRIC_INFO', payload: this.props.info.id });\n        this.props.history.push(`/home?songId=${this.props.info.id}`);\n    }\n\n    handlePrint = () => {\n        window.print(\"adfasdf\");\n    }\n\n\n\n    render() {\n        const { classes } = this.props;\n\n\n        return (\n           \n                <TableRow>\n                    <TableCell>{this.props.info.title}</TableCell>\n                    <TableCell align=\"right\">{this.props.info.author}</TableCell>\n                    <TableCell align=\"right\">{moment(this.props.info.date_created).format(\"MMM Do YYYY\")}</TableCell>\n                    <TableCell align=\"right\">{moment(this.props.info.date_edited).format(\"MMM Do YYYY\")}</TableCell>\n                    <TableCell align=\"right\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleClickEdit}\n                        >\n                            <EditIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                            Edit\n                        </Button>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleClickDelete}\n                        >\n                            <DeleteIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                            Delete\n                        </Button>\n                    </TableCell>\n                </TableRow>\n\n     \n            \n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nUserLyrics.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(UserLyrics)));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UserLyricInfo from '../UserLyricInfo/UserLyricInfo';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 2,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    button: {\n        width: \"50%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        display: \"block\",\n    },\n    typography: {\n        margin: theme.spacing.unit * 3,\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n        marginBottom: -5\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n})\n\nclass UserLyrics extends Component {\n\n    state = {\n        open: false,\n        newSong: {\n            title: '',\n            author: '',\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    onChange = propertyName => (event) => {\n        this.setState({\n            newSong: {\n                ...this.state.newSong,\n                [propertyName]: event.target.value,\n            }\n        })\n    }\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_USER_LYRICS' })\n\n    }\n\n    createNewSong = () => {\n        this.props.dispatch({type: 'ADD_NEW_SONG', payload: this.state.newSong})\n        this.handleClose();\n    }\n\n    render() {\n        const { classes } = this.props;\n\n\n        return (\n            <div >\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    className={classes.button}\n                    onClick={this.handleOpen}\n                >\n                    <AddIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n                    Create New Song\n                </Button>\n                <Paper className={classes.root}>\n                    <Typography className={classes.typography} align=\"center\" variant=\"h3\">Your Lyrics</Typography>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Title</TableCell>\n                                <TableCell align=\"right\">Author</TableCell>\n                                <TableCell align=\"right\">Date Created</TableCell>\n                                <TableCell align=\"right\">Last Edited</TableCell>\n                                <TableCell align=\"right\">Edit</TableCell>\n                                <TableCell align=\"right\">Delete</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.props.reduxState.userLyrics.map(info => {\n                                return <UserLyricInfo key={info.id} info={info} />\n                            })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                <form  autoComplete=\"off\" onSubmit={this.createNewSong}>\n                    <DialogTitle>Create New Song</DialogTitle>\n                    <DialogContent>\n                        \n                        <TextField\n                            autoFocus\n                            required\n                            margin=\"dense\"\n                            id=\"title\"\n                            label=\"Song Title\"\n                            type=\"text\"\n                            onChange={this.onChange('title')}\n                            value={this.state.newSong.title}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            required\n                            margin=\"dense\"\n                            id=\"author\"\n                            label=\"Song Author\"\n                            type=\"text\"\n                            onChange={this.onChange('author')}\n                            value={this.state.newSong.author}\n                            fullWidth\n                        />\n                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" color=\"primary\">\n                            Create\n                        </Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nUserLyrics.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(UserLyrics));","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../Header/Header';\nimport Grid from '@material-ui/core/Grid';\nimport AccountInformation from '../AccountInformation/AccountInformation';\nimport UserLyrics from '../UserLyrics/UserLyrics';\n\n\nconst UserProfile = (props) => (\n  <div>\n    <Header />\n    <Grid \n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={24}\n    >\n      <Grid item xs={12}>\n        <AccountInformation/>\n      </Grid>\n      <Grid item xs={12}>\n        <UserLyrics user={props.user}/>\n      </Grid>\n    </Grid>\n  </div>\n);\n\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(UserProfile);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    root: {\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n        marginRight: '4%',\n        marginLeft: '4%',\n        marginTop: '1%',\n        background: \"rgba(255,255,255,0.8)\",\n    },\n    description: {\n        textAlign: \"center\",\n        width: \"50%\",\n        height: \"25%\",\n        marginTop: 20,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        display: \"block\",\n    },\n    images: {\n        width: \"40vw\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        display: \"block\",\n    },\n    button: {\n        width: \"20%\",\n        display: \"block\",\n        marginTop: 20,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n    }\n});\n\nclass Welcome extends Component {\n\n    register = () => {\n        this.props.history.push('/register')\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                {/* <Paper className={classes.root}>\n                    <Typography variant=\"h2\" className={classes.header}>LyrAssist</Typography>\n                </Paper> */}\n                <Paper className={classes.root}>\n                    <img className={classes.images} src=\"/images/LyrAssist_logo.svg\" alt=\"lyrAssist Logo\"/>\n                    <Typography variant=\"h3\" className={classes.description}>Welcome To LyrAssist</Typography>\n                    <Typography variant=\"body1\" className={classes.description}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tristique lectus nulla, vitae accumsan neque luctus quis. Ut rhoncus, libero id tristique ornare, odio sapien tincidunt enim, ac mattis elit ligula eget nulla. Suspendisse tempus arcu magna, non aliquet ex molestie sed. Aliquam vel dolor eget lorem sollicitudin ultricies vel et nisl. Proin ac enim tincidunt, pellentesque lectus nec, laoreet nisl. Donec eros leo, fringilla et odio sed, ultrices placerat eros. Cras tincidunt risus lectus, quis placerat risus sagittis sit amet. Suspendisse finibus diam eget augue gravida placerat. Mgula vel, vestibulum ultrices felis. Nulla semper maximus consequat. Nunc in malesuada risus. Nullam viverra ornare nulla, non cursus felis convallis sit amet. Nullam consequat ligula ante.\n                    </Typography>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.register}>\n                        Start Writing\n                    </Button>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n});\n\nWelcome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Welcome));","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst palette = {\n  primary: { main: '#006064' },\n  secondary: { main: '#212121' },\n};\nconst themeName = 'Sea Green Geyser Hyena';\n\nexport default createMuiTheme({ palette, themeName });","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport Home from '../Home/Home';\nimport UserProfile from '../UserProfile/UserProfile';\nimport Welcome from '../Welcome/Welcome';\nimport RegisterPage from '../RegisterPage/RegisterPage';\nimport LoginPage from '../LoginPage/LoginPage';\n\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport theme from './theme';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/welcome\" />\n          <Route exact path=\"/welcome\" component={Welcome}/>\n          <Route exact path=\"/register\" component={RegisterPage} />\n          <Route exact path=\"/login\" component={LoginPage}/>\n          <ProtectedRoute\n            path=\"/home\"\n            component={Home}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/userprofile\"\n            component={UserProfile}\n          />\n        </Switch>\n      </Router>\n      </MuiThemeProvider>\n  )}\n}\n\nexport default connect()(App);\n\n// <div>\n// <Nav />\n// <Switch>\n//   {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n  // <Redirect exact from=\"/\" to=\"/home\" />\n//   {/* Visiting localhost:3000/about will show the about page.\n//   This is a route anyone can see, no login necessary */}\n//   <Route\n//     exact\n//     path=\"/about\"\n//     component={AboutPage}\n//   />\n//   {/* For protected routes, the view could show one of several things on the same route.\n//   Visiting localhost:3000/home will show the UserPage if the user is logged in.\n//   If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n//   Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n//   <ProtectedRoute\n//     exact\n//     path=\"/home\"\n//     component={UserPage}\n//   />\n//   {/* This works the same as the other protected route, except that if the user is logged in,\n//   they will see the info page instead. */}\n//   <ProtectedRoute\n//     exact\n//     path=\"/info\"\n//     component={InfoPage}\n//   />\n//   {/* If none of the other routes matched, we will show a 404. */}\n//   <Route render={() => <h1>404</h1>} />\n// </Switch>\n// <Footer />\n// </div>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}